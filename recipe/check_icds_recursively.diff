diff --git a/ocl_icd_loader.c b/ocl_icd_loader.c
index 225e61d..954381a 100644
--- a/ocl_icd_loader.c
+++ b/ocl_icd_loader.c
@@ -165,13 +165,46 @@ static inline int _string_with_slash(const char* str) {
   return strchr(str, '/') != NULL;
 }
 
-static inline unsigned int _find_num_icds(DIR *dir) {
+static inline int _file_is_dir(const char* dir_path, const char* file_path) {
+  if (strcmp(file_path, ".") == 0 || strcmp(file_path, "..") == 0) return 0;
+  char * str;
+  unsigned int lib_path_length;
+  lib_path_length = strlen(dir_path) + strlen(file_path) + 2;
+  str = malloc(lib_path_length*sizeof(char));
+  sprintf(str,"%s/%s", dir_path, file_path);
+
+  struct stat buf;
+  int status = stat(str, &buf);
+  int ret = 0;
+
+  if (status != 0 && errno != ENOENT) {
+    debug(D_WARN, "Cannot stat '%s'. Aborting", str);
+  } else if (S_ISDIR(buf.st_mode)) {
+    ret = 1;
+  }
+  free(str);
+  return ret;
+}
+
+static inline unsigned int _find_num_icds(DIR *dir, const char * dir_path) {
   unsigned int num_icds = 0;
   struct dirent *ent;
+  DIR * link_dir = NULL;
+  char * link_dir_path;
   while( (ent=readdir(dir)) != NULL ){
     if (_string_end_with_icd(ent->d_name)) {
       num_icds++;
     }
+    if (_file_is_dir(dir_path, ent->d_name)) {
+      link_dir_path =  malloc((strlen(dir_path) + strlen(ent->d_name) + 2)*sizeof(char));
+      sprintf(link_dir_path,"%s/%s", dir_path, ent->d_name);
+      link_dir = opendir(link_dir_path);
+      if (link_dir != NULL) {
+        num_icds += _find_num_icds(link_dir, link_dir_path);
+        closedir(link_dir);
+      }
+      free(link_dir_path);
+    }
   }
   rewinddir(dir);
   RETURN(num_icds);
@@ -243,12 +276,22 @@ static inline unsigned int _open_driver(unsigned int num_icds,
 static inline unsigned int _open_drivers(DIR *dir, const char* dir_path) {
   unsigned int num_icds = 0;
   struct dirent *ent;
+  DIR * link_dir = NULL;
+  char * link_dir_path;
   while( (ent=readdir(dir)) != NULL ){
-    if(! _string_end_with_icd(ent->d_name)) {
-      continue;
+    if(_string_end_with_icd(ent->d_name)) {
+        num_icds = _open_driver(num_icds, dir_path, ent->d_name);
+    }
+    else if (_file_is_dir(dir_path, ent->d_name)) {
+      link_dir_path =  malloc((strlen(dir_path) + strlen(ent->d_name) + 2)*sizeof(char));
+      sprintf(link_dir_path,"%s/%s", dir_path, ent->d_name);
+      link_dir = opendir(link_dir_path);
+      if (link_dir != NULL) {
+        num_icds += _open_drivers(link_dir, link_dir_path);
+        closedir(link_dir);
+      }
+      free(link_dir_path);
     }
-    num_icds = _open_driver(num_icds, dir_path, ent->d_name);
-
   }
   RETURN(num_icds);
 }
@@ -619,7 +662,7 @@ static void __initClIcd( void ) {
       goto abort;
     }
 
-    num_icds = _find_num_icds(dir);
+    num_icds = _find_num_icds(dir, dir_path);
     if(num_icds == 0) {
       goto abort;
     }
